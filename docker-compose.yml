services:

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /backend
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}

      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
    env_file:
      - .env
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_FONT_DEBUG: 0
      TAILWIND_JIT: 1
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules    # keep container node_modules separate
    ports:
      - "3000:3000"
    command: npm run dev

  mysql:
      image: mysql:9.2.0
      environment:
          MYSQL_ROOT_PASSWORD: 'app'
          MYSQL_DATABASE: app
      volumes:
          - mysql_data:/var/lib/mysql
      ports:
          - "3306:3306"

volumes:
  mysql_data:
  caddy_data:
  caddy_config:
